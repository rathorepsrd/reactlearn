{"version":3,"sources":["Filters.js","Card.js","CardButton.js","Menu.js","components/MainPage.js","SlideDrawer/SlideDrawerF.js","SlideDrawer/Backdrop.js","components/ListDelayAnimation.js","components/SlideBox.js","App.js","components/ReactSimpleAnimate.js","serviceWorker.js","index.js"],"names":["Filters","this","props","onClickAll","all","onClick","filters","type","checked","htmlFor","map","filter","i","key","data-index","id","name","status","Component","Card","imgs","img","src","alt","author","tag","Menu","className","MainPage","toggle","React","SlideDrawerF","state","drawerClasses","sidebarClose","event","withAnimation","preventDefault","window","innerWidth","setTimeout","show","console","log","drawerCloseClasses","Backdrop","ListDelayAnimation","Container","Row","Col","items","App","drawerOpen","drawerToggleClickHandler","setState","backdrop","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.97239441.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Filters extends Component {\n  render() {\n    const {onClickAll, all, onClick, filters} = this.props\n    return (\n      <div>\n          <form>\n    <ul>\n      <li onClick={onClickAll}>\n        <input \n          type=\"checkbox\"\n          checked={all}\n        />\n        <label htmlFor=\"all\">All</label>\n      </li>\n       {filters.map(\n        (filter, i)=>\n          <li  key={i} data-index={i} onClick={onClick} >\n            <input \n              id={filter.name} \n              type=\"checkbox\" \n              checked={filter.status}\n            />\n            <label htmlFor={filter.name}>{filter.name}</label>\n          </li>)}\n    </ul>\n  </form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Card extends Component {\n  render() {\n    const {imgs} =  this.props\n    return (\n      <div>\n          <ul>\n    {imgs.map(\n      (img, i)=>\n      <li  key={i}>\n        <figure>\n          <img src={img.src} alt={img.author}/>\n          <figcaption> \n            <div>{img.author} </div>\n            <span>{img.tag}</span>\n          </figcaption>\n        </figure>\n      </li>)}\n  </ul>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './App.css';\nimport Filters from './Filters.js';\nimport Cards from './Card';\n\nexport default class App extends Component {\n  state ={\n    imgs, \n    filters,\n    all: true\n  };\n\n  setFilter = (e) =>{\n    e.preventDefault();\n    const { filters, all } = this.state;\n    const { index } = e.currentTarget.dataset;\n   \n    filters[index].status = !filters[index].status;\n    this.setState({\n      filters\n    });\n    \n    this.updateFilters();\n    this.updateImgs();\n  }\n  \n  setAll = () =>{\n    const {filters} = this.state;\n    \n    filters.forEach( \n      filter => {\n        filter.status = false;\n      }\n    );\n    \n    this.setState({\n      all: true,\n      filters\n    });\n  }\n  \n  updateFilters(){\n    const allFiltersTrue = filters.every( filter => filter.status === true);\n    const allFiltersFalse = filters.every( filter => filter.status === false);\n    \n    if(allFiltersTrue||allFiltersFalse){\n      this.setAll();\n    }else{\n      this.setState({\n        all: false\n      });\n    } \n  }\n  \n  updateImgs() {\n    const { filters, all } = this.state;\n    let newImgs = [];\n    let a = 0;\n    \n    imgs.forEach((img, imgKey) => { \n      filters.forEach((filter, filterKey)=> {  \n        if((img.tag==filter.name)&&(filter.status==true)){\n          newImgs[a] = img;\n          a++;\n        }\n      })\n    });\n        \n    this.setState({\n      imgs: newImgs\n    });\n  }\n\n  render(){\n    const {filters, all} = this.state;  \n    console.log(this.state)\n    return(\n      <>\n        <Filters \n          onClickAll={this.setAll}\n          all={all}\n          onClick={this.setFilter}\n          filters={filters} />\n        {(all)?(\n            <Cards imgs = {imgs}/>\n          ):(\n            <Cards imgs = {this.state.imgs}/>\n        )}\n        {/* <div className=\"photo-source\">\n          All photos are from &nbsp;\n          <a href=\"https://www.pexels.com\" target=\"_blank\">\n             www.pexels.com\n          </a>\n        </div> */}\n \n      </>\n    );\n  }\n}\n\nconst imgs = [{author:\"The Lazy Artist Gallery\", tag:\"People\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/1.jpg?raw=true\"},\n              {author:\"Daria Shevtsova\", tag:\"Food\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/2.jpg?raw=true\"},\n              {author:\"Kasuma\", tag:\"Animals\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/3.jpg?raw=true\"},\n              {author:\"Dominika Roseclay\", tag:\"Plants\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/4.jpg?raw=true\"},\n              {author:\"Scott Webb\", tag:\"Plants\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/5.jpg?raw=true\"},\n               {author:\"Jeffrey Czum\", tag:\"People\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/6.jpg?raw=true\"},\n              {author:\"Dominika Roseclay\", tag:\"Food\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/7.jpg?raw=true\"},\n              {author:\"Valeria Boltneva\", tag:\"Animals\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/8.jpg?raw=true\"}\n];\n\nconst filters = [\n  {name:\"People\", status: false},\n  {name:\"Animals\", status: false},\n  {name:\"Plants\", status: false},\n  {name:\"Food\", status: false}\n];\n","import React from 'react';\r\nimport './Menustyle.css';\r\n\r\nconst Menu = () => {\r\n    return(\r\n        <div className=\"Menustyle\">\r\n            <ul>\r\n                <li>Home</li>\r\n                <li>About</li>\r\n                <li>Contact</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react'\nimport './MainPage.css'\nexport default class MainPage extends React.Component {\n   render(){\n     return (\n        <div className=\"container\" onClick={this.props.toggle}>\n        <div className=\"bar1\"></div>\n        <div className=\"bar2\"></div>\n        <div className=\"bar3\"></div>\n      </div>\n     )\n    }   \n}","import React, { Component } from 'react'\nimport './SlideDrawerF.scss';\nlet drawerCloseClasses;\nexport default class SlideDrawerF extends Component {\n state={\n  drawerClasses: ''\n }\n\n  componentDidMount(){\n    this.state.drawerClasses = 'side-drawer'\n    if (this.props.show == true) {\n      this.state.drawerClasses = 'side-drawer open'\n    }\n  }\n  sidebarClose = (event,withAnimation) => {\n    event.preventDefault();\n    this.state.drawerClasses = 'sidebar-block-close';\n    if (withAnimation) {\n      if (window.innerWidth > 991) {\n        setTimeout(() => {\n          this.props.toggle()\n        }, 2000);\n      } else {\n        setTimeout(() => {\n          this.props.toggle()\n        }, 500);\n      }\n    } else {\n      this.props.toggle()\n    }\n  }\n\n    // // if (withAnimation) {\n    //   if (window.innerWidth > 991) {\n    //     setTimeout(() => {\n    //       this.closeSidebar(event, true)\n    //       this.state.drawerClasses= 'side-drawer close';\n    //       this.props.toggle()\n    //     }, 2000);\n    //   } else {\n    //     setTimeout(() => {\n    //       this.state.drawerClasses= 'side-drawer close';\n    //       this.props.toggle()\n    //     }, 500);\n    //   }\n    // } \n\n  render() {\n    // let drawerClasses = 'side-drawer'\n    // if (this.props.show== true) {\n    //   drawerClasses = 'side-drawer open'\n    // }\n    console.log(\"F\", this.props)\n    const {drawerClasses} = this.state;\n    const {show} = this.props;\n    return (\n      <>\n        <div \n        className={`side-drawer  ${show ? \"open\" : \"close\"}`}\n        //  className={drawerClasses}\n        >\n          {/* <div >\n            <button onClick={this.props.toggle} className=\"drawerCloseButton\">Close</button>\n          </div>\n            Hello\n          </div> */}\n          \n          <div className=\"sidebar-container\">\n            <div className=\"row mx-0\">\n          \n              <div className=\"col-12 col-lg-3 sidebar-block sidebar-web d-none d-lg-block\" >\n                <h2 className=\"text-uppercase color-white\">Web</h2>\n                <p className=\"color-white\">At eLEOPARD, websites feature hand-crafted design and fast load times so that your\n                business is sure to impress potential customers who visit your site.</p>\n                <button className=\"btn btn-white\">Know More</button>\n              </div>\n  \n          <div className=\"col-12 col-lg-3 sidebar-block sidebar-app d-none d-lg-block\" >\n            <h2 className=\"text-uppercase color-white\">Apps</h2>\n            <p className=\"color-white\">We pay attention to User Interface as well as User Experience. Our Custom designed\n                and developed apps are targeted at its users</p>\n            <button className=\"btn btn-white\" >Know More</button>\n          </div>\n          <div className=\"col-12 col-lg-3 sidebar-block sidebar-branding d-none d-lg-block\" >\n            <h2 className=\"text-uppercase color-white\">BRANDING</h2>\n            <p className=\"color-white\">We provide departments, services and organizations (both on and off campus) with\n                professional design, print, photography, video and web design services.</p>\n            <button className=\"btn btn-white\">Know More</button>\n          </div>\n         \n          <div className=\"col-12 col-lg-3 sidebar-block sidebar-links\" >\n            {/* <button className=\"btn btn-white btn-circle\" (click)=\"closeSidebar($event, true)\" [ngClass]=\"{'btn-onscroll': buttonScroll}\">X</button> */}\n            <button onClick={(event) => this.sidebarClose(event, true)} className=\"btn btn-white btn-circle\" className={drawerCloseClasses}>Close</button>\n            <ul>\n              <li>\n                <a>About</a>\n                <a>Blog</a>\n              </li>\n              {/* <li *ngFor=\"let item of sidebarItems\" [class]=\"item.class\">\n                    <a *ngIf=\"item.urlType == 'filter'\" [routerLink]=\"[item.url]\" [queryParams]=\"{ filter : item.filterName }\" title=\"{{item.title}}\" (click)=\"closeSidebar($event)\">{{ item.name }}</a>\n                    <a *ngIf=\"item.urlType == 'router'\" [routerLink]=\"[item.url]\" title=\"{{item.title}}\" (click)=\"closeSidebar($event)\">{{ item.name }}</a>\n                    <a *ngIf=\"item.urlType == 'href'\" href=\"{{item.url}}\" target=\"_blank\" title=\"{{item.title}}\" (click)=\"closeSidebar($event)\">{{ item.name }}</a>\n                  </li> */}\n            </ul>\n          </div>\n          </div>\n        </div> \n        }\n          </div>     \n      </>\n    )\n  }\n}\n\n","import React from 'react'\nimport './Backdrop.css'\nexport default class Backdrop extends React.Component {\n  render(){\n    return(\n      <div className=\"backdrop\" onClick={this.props.toggle}/>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Navbar, Nav, NavDropdown, Row, Col, Container, Button, FormControl} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './ListDelayAnimation.css'\n\nexport default class ListDelayAnimation extends Component {\n  render() {\n    return (\n      <>\n       <Container>\n        <Row >\n        <Col className=\"fadeBox\">\n          <h3>Category 1</h3>\n          <Col>Action</Col>\n          <Col>Another action</Col>\n          <Col>Something</Col>\n        </Col>\n        <Col className=\"fadeBox\">\n          <h3>Category 1</h3>\n          <Col>Action</Col>\n          <Col>Another action</Col>\n          <Col>Something</Col>\n          </Col>\n          <Col className=\"fadeBox\">\n          <h3>Category 1</h3>\n          <Col>Action</Col>\n          <Col>Another action</Col>\n          <Col>Something</Col>\n          </Col>\n        </Row>\n        </Container>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './SlideBox.css'\n\nconst items = [0, 1, 2, 3];\n\nexport default class SlideBox extends Component {\n  state = {\n    index: 0,\n    index1: 1,\n    index2: 2\n  };\n\n  increment = 1;\n  componentDidMount = () => {\n    setInterval(() => {\n      this.setState((state) => {\n      if(state.index < 1){\n        return {\n          index: state.index + this.increment,\n          // increment: this.increment+this.increment\n        };}\n      if(state.index1 < 2){\n        return {\n          index1: state.index1 + 1,\n        };}\n        if(state.index2 < 3){\n          return {\n            index2: state.index2 + 1,\n          };}\n      });\n    }, 5000);\n  };\n\n\n  \n  render() {\n    \n    console.log(this.state.index)\n    const {index, index1, index2}= this.state\n    return (\n      <>\n        <div className=\"App\">\n        <div className=\"background\">\n        {items.map(i => {\n          return (\n            <div className=\"circle\">\n              <div\n                className=\"mover\"\n                style={{\n                  transform: `translateX(${(index - i) * 100}px)`,\n                }}\n              />\n               <div\n                className=\"mover1\"\n                style={{\n                  transform: `translateX(${(index1 - i) * 100}px)`,\n                }}\n              />\n              <div\n                className=\"mover2\"\n                style={{\n                  transform: `translateX(${(index2 - i) * 100}px)`,\n                }}\n              />\n\n            </div>\n          );\n        })}\n        </div>\n      </div>\n      </>\n    )\n  }\n}\n\n\n// import React, { Component } from \"react\";\n// import \"./SlideBox.css\";\n// import { Navbar, Nav, NavDropdown, Row, Col, Container, Button, FormControl } from 'react-bootstrap';\n\n// const items = [0, 1, 2, 3];\n\n// class SlideBox extends Component {\n//   state = {\n//     index: 0,\n//   };\n//   increment = 1;\n  // componentDidMount = () => {\n  //   setInterval(() => {\n  //     this.setState((state) => {\n        // if (state.index <= 0) {\n        //   this.increment = 1;\n\n        //   return {\n        //     index: state.index + this.increment,\n        //   };\n  //       }\n  //     });\n  //   }, 500);\n  // };\n//   handleBack = () => {\n//     this.setState((state) => {\n//       if (this.state.index >= items.length - 1) {\n//         this.increment = -1;\n//       }\n//       return {\n//         index: this.state.index + this.increment,\n//       }\n//     })\n//   }\n//   render() {\n//     const { index } = this.state;\n\n//     return (\n//       <>\n//         <div className=\"App\">\n//           <div className=\"background\">\n//             {items.map((i,index) => {\n//               return (\n//                 <div key={index} className=\"moveBox\">\n//                   <div\n//                     className=\"mover\"\n//                     style={{\n//                       transform: `translateX(${(index - i) * 100}px)`,\n//                     }}\n//                   >\n//                     <Container>\n//                       <Row >\n//                         <Col className=\"fadeBox\">\n//                           <h5>Cat 1</h5>\n//                           <Col>Action</Col>\n//                           <Col>Another action</Col>\n//                         </Col>\n//                       </Row>\n//                     </Container>\n//                   </div>\n//                   <div\n//                     className=\"mover1\"\n//                     style={{\n//                       transform: `translateX(${(index - i) * 100}px)`,\n//                     }}\n//                   >\n//                     <Container>\n//                       <Row >\n//                         <Col className=\"fadeBox\">\n//                           <h5>Cat 2</h5>\n//                           <Col>Action</Col>\n//                           <Col>Another action</Col>\n//                         </Col>\n//                       </Row>\n//                     </Container>\n//                   </div>\n//                   <div\n//                     className=\"mover2\"\n//                     style={{\n//                       transform: `translateX(${(index - i) * 100}px)`,\n//                     }}\n//                   > <Container>\n//                       <Row >\n//                         <Col className=\"fadeBox\">\n//                           <h5>Cat 3</h5>\n//                           <Col>Action</Col>\n//                           <Col>Another action</Col>\n//                         </Col>\n//                       </Row>\n//                     </Container></div>\n//                 </div>\n//               );\n//             })}\n//           </div>\n//         </div>\n//         <button  className=\"buttonStyle\" onClick={this.handleBack}> back</button>\n//       </>\n//     );\n//   }\n// }\n\n// export default SlideBox;","import React, { Component } from 'react'\n\nimport CardButton from './CardButton';\nimport Menu from './Menu';\n\nimport MainPage from './components/MainPage.js'\nimport SlideDrawerF from './SlideDrawer/SlideDrawerF.js'\nimport Backdrop from './SlideDrawer/Backdrop.js'\nimport ListDelayAnimation from './components/ListDelayAnimation'\nimport SlideBox from './components/SlideBox';\n\nimport ReactSimpleAnimate from './components/ReactSimpleAnimate'\n\nexport default class App extends Component {\n  state = { drawerOpen: false }\n  drawerToggleClickHandler = () => {\n      this.setState({\n        drawerOpen: !this.state.drawerOpen\n      })\n  }\n  render() {\n    let backdrop;\n    if(this.state.drawerOpen){\n      backdrop = <Backdrop toggle={this.drawerToggleClickHandler}/>;\n     }\n     console.log(\"app\",this.state)\n    return (\n      <div>\n        <Menu />\n        {/* ye slide box chalta h app k jagh rakho to */}\n        {/* <SlideBox /> */}\n\n        {/* list h sirf */}\n        <ListDelayAnimation />\n        {this.state.drawerOpen &&\n        < SlideDrawerF show={this.state.drawerOpen} toggle={this.drawerToggleClickHandler}/>\n        \n  }{ backdrop }\n \n        < MainPage toggle={this.drawerToggleClickHandler}/>  \n        {/* button k category behalf filter cards */}\n        {/* <CardButton /> */}\n\n        {/* ye niche code app pe chl rha yha nhi chal rha h\n         */}\n        {/* <ReactSimpleAnimate /> */}\n        {/* <br /><br />\n        <ReactSimpleAnimate /> */}\n       \n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react'\nimport { Animate } from \"react-simple-animate\";\nimport './ReactSimpleAnimate.css'\n\nexport default class ReactSimpleAnimate extends Component {\n  state = {\n    play: false\n  };\n\n  render() {\n    console.log(this.state)\n    return (\n      <>\n   \n{this.state.play == true ?\n<>\n        <Animate\n          play={this.state.play}\n          duration={1}\n          delay={0.3}\n          start={{\n            transform: \"translateX(0px)\"\n          }}\n          end={{ transform: \"translateX(100px)\" }}\n        >\n          <div className=\"divStyle\" >Hello</div>\n        </Animate>\n        <Animate\n          play={this.state.play}\n          duration={1}\n          delay={1.8}\n          start={{\n            transform: \"translateX(0px)\"\n          }}\n          end={{ transform: \"translateX(200px)\" }}\n        >\n          <div className=\"divS\" >Hello Second</div>\n        </Animate>\n        <Animate\n          play={this.state.play}\n         \n          duration={1}\n          delay={3.6}\n          start={{\n            transform: \"translateX(0px)\"\n          }}\n          end={{ transform: \"translateX(300px)\" }}\n        >\n          <div className=\"divT\" >Hello third</div>\n        </Animate>\n        \n        <button\n          \n          className=\"buttonStyle\"\n          onClick={() => this.setState(({ play }) => ({ play: !play }))}\n        >\n          Play\n        </button>\n        </>\n        :\n        <>\n        <Animate\n          play={this.state.play}\n          duration={1}\n          delay={3}\n          start={{\n            transform: \"translateX(0px)\"\n          }}\n          end={{ transform: \"translateX(100px)\" }}\n        >\n          <div className=\"divStyle\" >Hello First</div>\n        </Animate>\n        <Animate\n          play={this.state.play}\n          duration={1}\n          delay={1.8}\n          start={{\n            transform: \"translateX(0px)\"\n          }}\n          end={{ transform: \"translateX(200px)\" }}\n        >\n          <div className=\"divS\" >Hello Second</div>\n        </Animate>\n        <Animate\n          play={this.state.play}\n         \n          duration={1}\n          delay={.3}\n          start={{\n            transform: \"translateX(0px)\"\n          }}\n          end={{ transform: \"translateX(300px)\" }}\n        >\n          <div className=\"divT\" >Hello third</div>\n        </Animate>\n        \n        <button\n          \n          className=\"buttonStyle\"\n          onClick={() => this.setState(({ play }) => ({ play: !play }))}\n        >\n          Play\n        </button>\n        </>}\n         \n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}