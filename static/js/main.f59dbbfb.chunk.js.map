{"version":3,"sources":["Filters.js","Card.js","CardButton.js","Menu.js","components/MainPage.js","SlideDrawer/SlideDrawer.js","SlideDrawer/Backdrop.js","App.js","serviceWorker.js","index.js"],"names":["Filters","this","props","onClickAll","all","onClick","filters","type","checked","htmlFor","map","filter","i","key","data-index","id","name","status","Component","Card","imgs","img","src","alt","author","tag","App","state","setFilter","e","preventDefault","index","currentTarget","dataset","setState","updateFilters","updateImgs","setAll","forEach","allFiltersTrue","every","allFiltersFalse","newImgs","a","imgKey","filterKey","console","log","className","href","target","Menu","MainPage","class","toggle","React","SlideDrawer","drawerClasses","show","Backdrop","drawerOpen","drawerToggleClickHandler","backdrop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f59dbbfb.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Filters extends Component {\n  render() {\n    const {onClickAll, all, onClick, filters} = this.props\n    return (\n      <div>\n          <form>\n    <ul>\n      <li onClick={onClickAll}>\n        <input \n          type=\"checkbox\"\n          checked={all}\n        />\n        <label htmlFor=\"all\">All</label>\n      </li>\n       {filters.map(\n        (filter, i)=>\n          <li  key={i} data-index={i} onClick={onClick} >\n            <input \n              id={filter.name} \n              type=\"checkbox\" \n              checked={filter.status}\n            />\n            <label htmlFor={filter.name}>{filter.name}</label>\n          </li>)}\n    </ul>\n  </form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Card extends Component {\n  render() {\n    const {imgs} =  this.props\n    return (\n      <div>\n          <ul>\n    {imgs.map(\n      (img, i)=>\n      <li  key={i}>\n        <figure>\n          <img src={img.src} alt={img.author}/>\n          <figcaption> \n            <div>{img.author} </div>\n            <span>{img.tag}</span>\n          </figcaption>\n        </figure>\n      </li>)}\n  </ul>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './App.css';\nimport Filters from './Filters.js';\nimport Cards from './Card';\n\nexport default class App extends Component {\n  state ={\n    imgs, \n    filters,\n    all: true\n  };\n\n  setFilter = (e) =>{\n    e.preventDefault();\n    const { filters, all } = this.state;\n    const { index } = e.currentTarget.dataset;\n   \n    filters[index].status = !filters[index].status;\n    this.setState({\n      filters\n    });\n    \n    this.updateFilters();\n    this.updateImgs();\n  }\n  \n  setAll = () =>{\n    const {filters} = this.state;\n    \n    filters.forEach( \n      filter => {\n        filter.status = false;\n      }\n    );\n    \n    this.setState({\n      all: true,\n      filters\n    });\n  }\n  \n  updateFilters(){\n    const allFiltersTrue = filters.every( filter => filter.status === true);\n    const allFiltersFalse = filters.every( filter => filter.status === false);\n    \n    if(allFiltersTrue||allFiltersFalse){\n      this.setAll();\n    }else{\n      this.setState({\n        all: false\n      });\n    } \n  }\n  \n  updateImgs() {\n    const { filters, all } = this.state;\n    let newImgs = [];\n    let a = 0;\n    \n    imgs.forEach((img, imgKey) => { \n      filters.forEach((filter, filterKey)=> {  \n        if((img.tag==filter.name)&&(filter.status==true)){\n          newImgs[a] = img;\n          a++;\n        }\n      })\n    });\n        \n    this.setState({\n      imgs: newImgs\n    });\n  }\n\n  render(){\n    const {filters, all} = this.state;  \n    console.log(this.state)\n    return(\n      <>\n        <Filters \n          onClickAll={this.setAll}\n          all={all}\n          onClick={this.setFilter}\n          filters={filters} />\n        {(all)?(\n            <Cards imgs = {imgs}/>\n          ):(\n            <Cards imgs = {this.state.imgs}/>\n        )}\n        <div className=\"photo-source\">\n          All photos are from &nbsp;\n          <a href=\"https://www.pexels.com\" target=\"_blank\">\n             www.pexels.com\n          </a>\n        </div>\n \n      </>\n    );\n  }\n}\n\nconst imgs = [{author:\"The Lazy Artist Gallery\", tag:\"People\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/1.jpg?raw=true\"},\n              {author:\"Daria Shevtsova\", tag:\"Food\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/2.jpg?raw=true\"},\n              {author:\"Kasuma\", tag:\"Animals\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/3.jpg?raw=true\"},\n              {author:\"Dominika Roseclay\", tag:\"Plants\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/4.jpg?raw=true\"},\n              {author:\"Scott Webb\", tag:\"Plants\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/5.jpg?raw=true\"},\n               {author:\"Jeffrey Czum\", tag:\"People\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/6.jpg?raw=true\"},\n              {author:\"Dominika Roseclay\", tag:\"Food\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/7.jpg?raw=true\"},\n              {author:\"Valeria Boltneva\", tag:\"Animals\", src:\"https://github.com/OlgaKoplik/CodePen/blob/master/filterGallery/8.jpg?raw=true\"}\n];\n\nconst filters = [\n  {name:\"People\", status: false},\n  {name:\"Animals\", status: false},\n  {name:\"Plants\", status: false},\n  {name:\"Food\", status: false}\n];\n","import React from 'react';\r\nimport './Menustyle.css';\r\n\r\nconst Menu = () => {\r\n    return(\r\n        <div className=\"Menustyle\">\r\n            <ul>\r\n                <li>Home</li>\r\n                <li>About</li>\r\n                <li>Contact</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react'\nimport './MainPage.css'\nexport default class MainPage extends React.Component {\n   render(){\n     return (\n        <div class=\"container\" onClick={this.props.toggle}>\n        <div class=\"bar1\"></div>\n        <div class=\"bar2\"></div>\n        <div class=\"bar3\"></div>\n      </div>\n     )\n    }   \n}","import React from 'react'\nimport './SlideDrawer.css'\n\nexport default class SlideDrawer extends React.Component {\n   render(){\n       let drawerClasses = 'side-drawer'\n       if(this.props.show) {\n          drawerClasses = 'side-drawer open'\n       }\n       return(\n          <>\n          <div className={drawerClasses}>\n            <div>\n          <button onClick={this.props.toggle}>Close</button>\n          </div>\n             <h1>Hello, I'm sliding!</h1>\n          </div>\n          \n          </>\n)\n    }\n    \n}","import React from 'react'\nimport './Backdrop.css'\nexport default class Backdrop extends React.Component {\n  render(){\n    return(\n      <div className=\"backdrop\" onClick={this.props.toggle}/>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport CardButton from './CardButton';\nimport Menu from './Menu';\n\nimport MainPage from './components/MainPage.js'\nimport SlideDrawer from './SlideDrawer/SlideDrawer.js'\nimport Backdrop from './SlideDrawer/Backdrop.js'\nexport default class App extends Component {\n  state = { drawerOpen: false }\n  drawerToggleClickHandler = () => {\n      this.setState({\n        drawerOpen: !this.state.drawerOpen\n      })\n  }\n  render() {\n    let backdrop;\n    if(this.state.drawerOpen){\n      backdrop = <Backdrop toggle={this.drawerToggleClickHandler}/>;\n     }\n     console.log(this.state)\n    return (\n      <div>\n        <Menu />\n        < SlideDrawer show={this.state.drawerOpen} toggle={this.drawerToggleClickHandler}/>\n        { backdrop }\n        < MainPage toggle={this.drawerToggleClickHandler}/>  \n        {/* button k category behalf filter cards */}\n        <CardButton />\n\n\n\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}